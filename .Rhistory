"#' \\describe{\n",
"#' }",
title = "Attractiveness of Self-Resembling Faces",
description = "Attractiveness judgements of same-sex and other-sex self-resembling faces from DeBruine (2004).",
nrow = nrow(self_res_att),
ncol = ncol(self_res_att))
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
"#' }",
title = "Attractiveness of Self-Resembling Faces",
description = "Attractiveness judgements of same-sex and other-sex self-resembling faces from DeBruine (2004).",
nrow = nrow(self_res_att),
ncol = ncol(self_res_att))
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
"#' }",
"#' @source \\url[data_URL]\n",
"\"[dataname]\"",
title = "Attractiveness of Self-Resembling Faces",
description = "Attractiveness judgements of same-sex and other-sex self-resembling faces from DeBruine (2004).",
nrow = nrow(self_res_att),
ncol = ncol(self_res_att),
data_URL = "https://osf.io/3c5s4/",
dataname = "self_res_att"
)
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\"",
title = "Attractiveness of Self-Resembling Faces",
description = "Attractiveness judgements of same-sex and other-sex self-resembling faces from DeBruine (2004).",
nrow = nrow(self_res_att),
ncol = ncol(self_res_att),
data_URL = "https://osf.io/3c5s4/",
dataname = "self_res_att"
)
data <- self_res_att
vars <- list()
colnames(data)
if (!length(vars)) {
vars <- colnames(data)
names(vars) <- vars
}
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items
vars <- colnames(data)
names(vars)
if (!length(vars)) {
vars <- colnames(data)
}
if (is.null(names(vars))) {
names(vars) <- colnames(data)
}
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items
data_desc <- function(data,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = "dataname") {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]',
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\""
)
}
data_desc(self_res_att)
data_desc <- function(data,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = "dataname") {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\""
)
}
data_desc(self_res_att)
data_desc <- function(data,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = "dataname") {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, sep = "\n")
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\""
)
}
data_desc(self_res_att)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, sep = "\n")
items
items <- paste(items, collapse = "\n")
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\""
)
data_desc <- function(data,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = "dataname") {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url[data_URL]\n",
"\"[dataname]\""
)
}
data_desc(self_res_att)
deparse(substitute(data))
data_doc <- function(data, filename = "data.R",
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = deparse(substitute(data))) {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
}
data_doc(iris)
data_doc <- function(data, filename = "data.R",
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = deparse(substitute(data))) {
nrow <- nrow(data)
ncol <- ncol(data)
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
doc
}
data_doc(iris)
old_file_contents <- readLines(filename)
filename <- "datad.R"
doc
nrow <- nrow(data)
ncol <- ncol(data)
if (is.null(dataname)) dataname <- deparse(substitute(data))
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
doc
title = "Data Title"
description = "Data Description"
vars = list()
data_URL = ""
dataname = NULL
nrow <- nrow(data)
ncol <- ncol(data)
if (is.null(dataname)) dataname <- deparse(substitute(data))
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
cat(doc)
write(doc, filename)
old_file_contents <- readLines(filename)
old_file_contents
c(old_file_contents, doc)
write(c(old_file_contents, "\n\n", doc), filename)
readLines(filename)
data_doc <- function(data,
filename = NULL,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = NULL) {
nrow <- nrow(data)
ncol <- ncol(data)
if (is.null(dataname)) dataname <- deparse(substitute(data))
if (!length(vars)) vars <- colnames(data)
if (is.null(names(vars))) names(vars) <- colnames(data)
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
if (is.null(filename)) {
cat(doc)
} else if (file.exists(filename)) {
old_file_contents <- readLines(filename)
write(c(old_file_contents, "\n\n", doc), filename)
message("Documentation appended to ", filename)
} else {
write(doc, filename)
message("Documentation written to ", filename)
}
data_doc(iris)
names(vars)
cnames
cnames <- colnames(data)
# check if missing vars
setdiff("oldbro", names(vars))
# check if missing vars
setdiff(c("oldbro", "c"), names(vars))
# check if missing vars
defined_names <- setdiff(cnames, names(vars))
defined_names
cnames
names(vars)
# check if missing vars
defined_names <- intersect(cnames, names(vars))
defined_names
c(vars, undefined_names)
# check if missing vars
defined_names <- intersect(cnames, names(vars))
undefined_names <- setdiff(cnames, names(vars))
undefined_names
c(vars, undefined_names)
data_doc <- function(data,
filename = NULL,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = NULL) {
nrow <- nrow(data)
ncol <- ncol(data)
if (is.null(dataname)) dataname <- deparse(substitute(data))
cnames <- colnames(data)
if (!length(vars)) vars <- cnames
if (is.null(names(vars))) names(vars) <- cnames
# check for missing vars
defined_names <- intersect(cnames, names(vars))
undefined_names <- setdiff(cnames, names(vars))
vars <- setNames(c(vars[defined_names], undefined_names),
c(defined_names, undefined_names))
vars <- vars[cnames] # ensure in same order as data
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
if (is.null(filename)) {
cat(doc)
} else if (file.exists(filename)) {
old_file_contents <- readLines(filename)
write(c(old_file_contents, "\n\n", doc), filename)
message("Documentation appended to ", filename)
} else {
write(doc, filename)
message("Documentation written to ", filename)
}
data_doc(iris, vars = c(Sepal.Length = "Length of Sepal"))
data_doc <- function(data,
filename = NULL,
title = "Data Title",
description = "Data Description",
vars = list(),
data_URL = "",
dataname = NULL) {
nrow <- nrow(data)
ncol <- ncol(data)
if (is.null(dataname)) dataname <- deparse(substitute(data))
cnames <- colnames(data)
if (!length(vars)) vars <- cnames
if (is.null(names(vars))) names(vars) <- cnames
# check for missing vars
defined_names <- intersect(cnames, names(vars))
undefined_names <- setdiff(cnames, names(vars))
vars <- setNames(c(vars[defined_names], undefined_names),
c(defined_names, undefined_names))
vars <- vars[cnames] # ensure in same order as data
if (length(undefined_names)) {
message("These columns were not defined: ", paste(undefined_names, collapse = ", "))
}
items <- glue::glue("#'   \\item{[colname]}{[coldesc]}",
colname = names(vars),
coldesc = vars,
.open = "[",
.close = "]")
items <- paste(items, collapse = "\n")
doc <- glue::glue(.open = '[', .close = ']',
"#' [title].\n",
"#' \n",
"#' [description]\n",
"#' \n",
"#' @format A data frame with [nrow] rows and [ncol] variables:\n",
"#' \\describe{\n",
'[items]\n',
"#' }\n",
"#' @source \\url{[data_URL]}\n",
"\"[dataname]\""
)
if (is.null(filename)) {
cat(doc)
} else if (file.exists(filename)) {
old_file_contents <- readLines(filename)
write(c(old_file_contents, "\n\n", doc), filename)
message("Documentation appended to ", filename)
} else {
write(doc, filename)
message("Documentation written to ", filename)
}
data_doc(iris, vars = c(Sepal.Length = "Length of Sepal"))
data_doc(iris, vars = c(Sepal.Length = "Length of Sepal", a = "A"))
usethis::create_from_github("debruine/demopkg", "~/rproj/debruine")
devtools::install("../../debruine/demopkg/")
renv::snapshot()
