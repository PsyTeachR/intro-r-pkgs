dv      = "preferences for female faces",
level1  = "participants who resembled those faces",
level2  = "non-self participants",
mean1   = round(mean(self_res_att$f_self), 1),
sd1     = round(sd(self_res_att$f_self), 1),
mean2   = round(mean(self_res_att$f_non), 1),
sd2     = round(sd(self_res_att$f_non), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round(t_results$parameter, 1),
t_value = round(t_results$statistic, 2),
p_value = round(t_results$p.value, 3)
)
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round(mean(x), 1),
sd1     = round(sd(x), 1),
mean2   = round(mean(y), 1),
sd2     = round(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round(t_results$parameter, 1),
t_value = round(t_results$statistic,2),
p_value = round(t_results$p.value, 3)
)
}
apa_t_pair(x = self_res_att$f_self,
y = self_res_att$f_non)
apa_t_pair(x = self_res_att$f_self,
y = self_res_att$f_non,
dv = "preferences for female faces",
level1 = "participants who resembled those faces",
level2 = "non-self participants")
apa_t_pair(x = self_res_att$m_self,
y = self_res_att$m_non,
dv = "preferences for male faces",
level1 = "participants who resembled those faces",
level2 = "non-self participants")
?demopkg::apa_t_pair
# if you haven't added the data yet, use this code:
self_res_att <- read.csv("https://osf.io/download/3c5s4/")
# if you haven't added the data yet, use this code:
self_res_att <- read.csv("https://raw.githubusercontent.com/PsyTeachR/intro-r-pkgs/main/data-raw/DeBruine_2004_PRSLB_att.csv")
formatC(3/17)
formatC(3/17, 3)
formatC(1.0000001, 3)
formatC(1.9999999, 3)
formatC(1.9999999, 3, zero.print = TRUE)
formatC(1.9999999, 3, zero.print = FALSE)
formatC(1.9999999, 3, zero.print = 's')
formatC(1.099, 3, zero.print = 's')
formatC(1.09, 3, zero.print = 's')
formatC(1.00, 3)
formatC(1.00, digits = 3)
formatC(1.00, 3)
?formatC
formatC(1.00, 3, flag = "0")
formatC(1.00, 3, drop0trailing = FALSE)
prettyNum(1.00, 3, drop0trailing = FALSE)
prettyNum(1.00, digits = 3, drop0trailing = FALSE)
sprintf("%.3f", 1.00000000)
sprintf("%.3f", 1.99999)
sprintf
?formatC
x <- 1.99999
digits <- 3
sprintf("%.3f", x)
fmt <- paste0("%.", digits, "f")
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
round0
round0(PI, 3)
round0(pi, 3)
round0(1.9999, 2)
round0(1, 3)
round0(1.9999, 2)
round0(7/3, 3)
round0(1.9999, 2)
round0
?round
?sprintf
round0(1, 3)
rm(round0)
round0(1, 3)
demopkg:::round0(1, 3)
devtools::install("../../debruine/demopkg/")
demopkg:::round0(1, 3)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
# warn about identical values
if (all(x == y)) {
warning("The values for x and y should probably not be identical.")
}
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
# p <- if (t_results$p.value < .001) {
#   "p < .001"
# } else {
#   paste("p =", round0(t_results$p.value, 3))
# }
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic, 2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
library(usethis)
library(testthat)
test_that("defaults", {
})
test_that("defaults", {
x <- c(1,2,3,4,5)
y <- c(2,3,2,5,6)
result <- apa_t_pair(x, y)
expected <- "A paired-samples t-test was conducted to compare the DV between level 1 (M = 3, SD = 1.6) and level 2 (M = 3.6, SD = 1.8). There was a non-significant difference; t(4) = -1.5, p = 0.208."
expect_equal(result, expected)
})
test_that("defaults", {
x <- c(1,2,3,4,5)
y <- c(2,3,2,5,6)
result <- apa_t_pair(x, y)
expected <- "A paired-samples t-test was conducted to compare the DV between level 1 (M = 3.0, SD = 1.6) and level 2 (M = 3.6, SD = 1.8). There was a non-significant difference; t(4) = -1.50, p = 0.208."
expect_equal(result, expected)
})
test_that("defaults-sig", {
x <- c(1,2,1,3,1)
y <- c(5,3,2,5,6)
result <- apa_t_pair(x, y)
expected <- "A paired-samples t-test was conducted to compare the DV between level 1 (M = 1.6, SD = 0.9) and level 2 (M = 4.2, SD = 1.6). There was a significant difference; t(4) = -3.20, p = 0.033."
expect_equal(result, expected)
})
test_that("non-defaults", {
x <- c(1,2,1,3,1)
y <- c(5,3,2,5,6)
result <- apa_t_pair(x, y, dv = "the score", "Group A", "Group B")
expected <- "A paired-samples t-test was conducted to compare the score between Group A (M = 1.6, SD = 0.9) and Group B (M = 4.2, SD = 1.6). There was a significant difference; t(4) = -3.20, p = 0.033."
expect_equal(result, expected)
})
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_warning( apa_t_pair(x, x) )
})
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
# warn about identical values
if (all(x == y)) {
warning("The values for x and y should probably not be identical.")
}
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic, 2),
p_value = round0(t_results$p.value, 3)
)
}
test_that("same x and y", {
x <- c(1,2,1,4,1)
y <- c(5,3,2,5,6)
expect_warning( apa_t_pair(x, x) )
})
usethis::create_from_github("debruine/demopkg", "../../debruine/")
renv::status()
webexercises::add_to_bookdown()
usethis::git_vaccinate()
usethis::create_from_github("psyteachr/demopkg", "~/rproj/psyteachr/")
?demopkg
quarto::quarto_render()
source("R/setup.R")
library(usethis)
library(testthat)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
test_that("defaults", {
})
test_that("defaults", {
x <- c(1,2,3,4,5)
y <- c(2,3,2,5,6)
result <- apa_t_pair(x, y)
expected <- "A paired-samples t-test was conducted to compare the DV between level 1 (M = 3.0, SD = 1.6) and level 2 (M = 3.6, SD = 1.8). There was a non-significant difference; t(4) = -1.50, p = 0.208."
expect_equal(result, expected)
})
test_that("defaults-sig", {
x <- c(1,2,1,3,1)
y <- c(5,3,2,5,6)
result <- apa_t_pair(x, y)
expected <- "A paired-samples t-test was conducted to compare the DV between level 1 (M = 1.6, SD = 0.9) and level 2 (M = 4.2, SD = 1.6). There was a significant difference; t(4) = -3.20, p = 0.033."
expect_equal(result, expected)
})
# update R/apa_t_pair.R
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
# warn about identical values
if (all(x == y)) {
warning("The values for x and y should probably not be identical.")
}
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
test_that("same x and y", {
x <- c(1,2,1,4,1)
y <- c(5,3,2,5,6)
expect_warning( apa_t_pair(x, x) )
})
quarto::quarto_render()
library(usethis)
library(testthat)
renv::deactivate()
source("R/setup.R")
library(usethis)
library(testthat)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
x <- c(1,2,1,4,1)
expect_warning( apa_t_pair(x, x) )
apa_t_pair(x, x)
# add to tests/testthat/apa_t_pair.R
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_warning( apa_t_pair(x, x) )
})
# add to tests/testthat/apa_t_pair.R
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_error( apa_t_pair(x, x) )
})
# add to tests/testthat/apa_t_pair.R
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_warning( apa_t_pair(x, x) )
})
apa_t_pair(x, x)
usethis::edit_r_environ()
if (LETTERS == "A") 1 else 2
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
source("R/setup.R")
library(usethis)
library(testthat)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
usethis::edit_r_environ()
library(usethis)
library(testthat)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
if (LETTERS == "A") 1 else 2
Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = TRUE)
if (LETTERS == "A") 1 else 2
Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = FALSE)
if (LETTERS == "A") 1 else 2
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = FALSE)
if (LETTERS == "A") 1 else 2
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = TRUE)
if (LETTERS == "A") 1 else 2
ifelse(t_results$p.value < .05, "", "non-")
x <- c(1,2,1,4,1)
ifelse(t_results$p.valuy = xe < .05, "", "non-")
y = x
t_results <- t.test(x, y, paired = TRUE)
ifelse(t_results$p.valuy = xe < .05, "", "non-")
ifelse(t_results$p.value < .05, "", "non-")
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = TRUE)
ifelse(t_results$p.value < .05, "", "non-")
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = FALSE)
ifelse(t_results$p.value < .05, "", "non-")
Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = FALSE)
ifelse(t_results$p.value < .05, "", "non-")
Sys.setenv("_R_CHECK_LENGTH_1_LOGIC2_" = TRUE)
ifelse(t_results$p.value < .05, "", "non-")
t_results$p.value
ifelse(NaN < .05, "", "non-")
ifelse(NaN < .05, 1,2)
ifelse(NaN < .05, 1, 2)
?expect_warning
library(usethis)
library(testthat)
# define apa_t_pair and round0 from last chapter
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
round0 <- function(x, digits = 0) {
fmt <- paste0("%.", digits, "f")
x0 <- sprintf(fmt, x)
return(x0)
}
x <- c(1,2,1,4,1)
apa_t_pair(x, x)
# add to tests/testthat/apa_t_pair.R
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_error( apa_t_pair(x, x),
regexp = "x and y cannot be identical",
fixed = TRUE )
})
# edit R/apa_t_pair.R
apa_t_pair <- function(x, y,
dv = "the DV",
level1 = "level 1",
level2 = "level 2") {
# warn about identical values
if (all(x == y)) {
stop("x and y cannot be identical")
}
t_results <- t.test(x, y, paired = TRUE)
template <- "A paired-samples t-test was conducted to compare {dv} between {level1} (M = {mean1}, SD = {sd1}) and {level2} (M = {mean2}, SD = {sd2}). There was a {non}significant difference; t({df}) = {t_value}, p = {p_value}."
glue::glue(
template,
mean1   = round0(mean(x), 1),
sd1     = round0(sd(x), 1),
mean2   = round0(mean(y), 1),
sd2     = round0(sd(y), 1),
non     = ifelse(t_results$p.value < .05, "", "non-"),
df      = round0(t_results$parameter, 0),
t_value = round0(t_results$statistic,2),
p_value = round0(t_results$p.value, 3)
)
}
# in tests/testthat/apa_t_pair.R
test_that("same x and y", {
x <- c(1,2,1,4,1)
expect_error( apa_t_pair(x, x),
regexp = "x and y cannot be identical",
fixed = TRUE )
})
devtools::install("~/rproj/debruine/demopkg/")
quarto::quarto_render()
usethis::gh_token_help()
usethis::browse_github_token()
usethis::create_github_token()
?create_github_token
gh::gh_whoami()
usethis::gh_token_help()
quarto::quarto_render()
usethis::use_description()
usethis::use_description(check_name = FALSE)
usethis::use_ccby_license()
usethis::use_package("usethis")
usethis::use_package("testthat")
usethis::use_package("glossary")
usethis::use_package("webexercises")
usethis::use_package("devtools")
usethis::use_package("pkgdown")
usethis::use_package("readr")
usethis::use_package("glue")
usethis::use_package("testthat")
usethis::use_package("hexSticker")
usethis::use_package("ggplot2")
usethis::use_package("badger")
renv::init()
renv::activate()
renv::install("psyteachr/glossary")
renv::init(bioconductor = FALSE)
quarto::quarto_render()
renv::deactivate()
renv::remove()
